export default function (keyCode) {

    switch (keyCode) {
        case 0: return 'That key has no keycode';
        case 3: return 'break';
        case 8: return 'backspace';
        case 9: return 'tab';
        case 12: return 'clear';
        case 13: return 'enter';
        case 16: return 'shift';
        case 17: return 'ctrl';
        case 18: return 'alt';
        case 19: return 'pause/break';
        case 20: return 'caps lock';
        case 21: return 'hangul';
        case 25: return 'hanja';
        case 27: return 'esc';
        case 28: return 'conversion';
        case 29: return 'non-conversion';
        case 32: return 'spacebar';
        case 33: return 'page up';
        case 34: return 'page down';
        case 35: return 'end';
        case 36: return 'home';
        case 37: return 'left';
        case 38: return 'up';
        case 39: return 'right';
        case 40: return 'down';
        case 41: return 'select';
        case 42: return 'print';
        case 43: return 'execute';
        case 44: return 'Print Screen';
        case 45: return 'insert';
        case 46: return 'delete';
        case 47: return 'help';
        case 48: return '0';
        case 49: return '1';
        case 50: return '2';
        case 51: return '3';
        case 52: return '4';
        case 53: return '5';
        case 54: return '6';
        case 55: return '7';
        case 56: return '8';
        case 57: return '9';
        case 58: return ':';
        case 59: return 'semicolon (firefox), equals';
        case 60: return '<';
        case 61: return 'equals (firefox)';
        case 63: return 'ß';
        case 64: return '@ (firefox)';
        case 65: return 'a';
        case 66: return 'b';
        case 67: return 'c';
        case 68: return 'd';
        case 69: return 'e';
        case 70: return 'f';
        case 71: return 'g';
        case 72: return 'h';
        case 73: return 'i';
        case 74: return 'j';
        case 75: return 'k';
        case 76: return 'l';
        case 77: return 'm';
        case 78: return 'n';
        case 79: return 'o';
        case 80: return 'p';
        case 81: return 'q';
        case 82: return 'r';
        case 83: return 's';
        case 84: return 't';
        case 85: return 'u';
        case 86: return 'v';
        case 87: return 'w';
        case 88: return 'x';
        case 89: return 'y';
        case 90: return 'z';
        case 91: return 'Windows Key / Left ⌘ / Chromebook Search key';
        case 92: return 'right window key';
        case 93: return 'Windows Menu / Right ⌘';
        case 95: return 'sleep';
        case 96: return 'numpad 0';
        case 97: return 'numpad 1';
        case 98: return 'numpad 2';
        case 99: return 'numpad 3';
        case 100: return 'numpad 4';
        case 101: return 'numpad 5';
        case 102: return 'numpad 6';
        case 103: return 'numpad 7';
        case 104: return 'numpad 8';
        case 105: return 'numpad 9';
        case 106: return 'multiply';
        case 107: return 'add';
        case 108: return 'numpad period (firefox)';
        case 109: return 'subtract';
        case 110: return 'decimal point';
        case 111: return 'divide';
        case 112: return 'f1';
        case 113: return 'f2';
        case 114: return 'f3';
        case 115: return 'f4';
        case 116: return 'f5';
        case 117: return 'f6';
        case 118: return 'f7';
        case 119: return 'f8';
        case 120: return 'f9';
        case 121: return 'f10';
        case 122: return 'f11';
        case 123: return 'f12';
        case 124: return 'f13';
        case 125: return 'f14';
        case 126: return 'f15';
        case 127: return 'f16';
        case 128: return 'f17';
        case 129: return 'f18';
        case 130: return 'f19';
        case 131: return 'f20';
        case 132: return 'f21';
        case 133: return 'f22';
        case 134: return 'f23';
        case 135: return 'f24';
        case 144: return 'num lock';
        case 145: return 'scroll lock';
        case 151: return 'airplane mode';
        case 160: return '^';
        case 161: return '!';
        case 162: return '؛ (arabic semicolon)';
        case 163: return '#';
        case 164: return '$';
        case 165: return 'ù';
        case 166: return 'page backward';
        case 167: return 'page forward';
        case 168: return 'refresh';
        case 169: return 'closing paren (AZERTY)';
        case 170: return '*';
        case 171: return '~ + * key';
        case 172: return 'home key';
        case 173: return 'minus (firefox), mute/unmute';
        case 174: return 'decrease volume level';
        case 175: return 'increase volume level';
        case 176: return 'next';
        case 177: return 'previous';
        case 178: return 'stop';
        case 179: return 'play/pause';
        case 180: return 'e-mail';
        case 181: return 'mute/unmute (firefox)';
        case 182: return 'decrease volume level (firefox)';
        case 183: return 'increase volume level (firefox)';
        case 186: return 'semi-colon / ñ';
        case 187: return 'equal sign';
        case 188: return 'comma';
        case 189: return 'dash';
        case 190: return 'period';
        case 191: return 'forward slash / ç';
        case 192: return 'grave accent / ñ / æ / ö';
        case 193: return '?, / or °';
        case 194: return 'numpad period (chrome)';
        case 219: return 'open bracket';
        case 220: return 'back slash';
        case 221: return 'close bracket / å';
        case 222: return 'single quote / ø / ä';
        case 223: return '`';
        case 224: return 'left or right ⌘ key (firefox)';
        case 225: return 'altgr';
        case 226: return '< /git >, left back slash';
        case 230: return 'GNOME Compose Key';
        case 231: return 'ç';
        case 233: return 'XF86Forward';
        case 234: return 'XF86Back';
        case 235: return 'non-conversion';
        case 240: return 'alphanumeric';
        case 242: return 'hiragana/katakana';
        case 243: return 'half-width/full-width';
        case 244: return 'kanji';
        case 251: return 'unlock trackpad (Chrome/Edge)';
        case 255: return 'toggle touchpad';
        default: return 'key code not defined'
    }
}


